syntax = "proto3";

package mcenter.token;

import "apps/token/pb/model.proto";

option go_package = "github.com/qiaogy91/mcenter/apps/token";

service Rpc {
    rpc IssueToken (IssueTokenRequest) returns (Token); // 颁发令牌
    rpc DeleteToken (DeleteTokenRequest) returns (Token); // 撤销令牌
    rpc DescToken (DescTokenRequest) returns (Token); // 获取令牌
    rpc QueryToken (QueryTokenRequest) returns (TokenSet); // 查询令牌

    rpc RefreshToken (RefreshTokenRequest) returns (Token); // 刷新令牌
    rpc ValidateToken (ValidateTokenRequest) returns (Token); // 校验令牌
}

enum QueryType {
    QUERY_TYPE_UNSPECIFIED = 0;
    QUERY_TYPE_ALL = 1;
    QUERY_TYPE_USERNAME = 2;
}

enum IssueType {
    ISSUE_TYPE_UNSPECIFIED = 0;
    ISSUE_TYPE_ACCOUNT = 1;
    ISSUE_TYPE_FEISHU = 2;
}

message IssueTokenRequest {
    IssueType issue_type = 1;
    string username = 2;
    string password = 3;
    string code = 4;
    string state = 5;
}
message DeleteTokenRequest {
    // @gotags: validate:"required"
    string access_token = 1; // 要被撤销的Token
    // @gotags: validate:"required"
    string refresh_token = 2;// 需要refresh token 才能撤销
}
message RefreshTokenRequest {
    // @gotags: json:"accessToken" validate:"required"
    string access_token = 1; // 要被延长的Token
    // @gotags: json:"refreshToken" validate:"required"
    string refresh_token = 2;// 需要refresh token 才能延长
}
message QueryTokenRequest {
    // @gotags: validate:"required"
    int64 page_num = 1;
    // @gotags: validate:"required"
    int64 page_size = 2;
    // @gotags: validate:"required"
    QueryType query_type = 3;
    string keyword = 4;
}
message DescTokenRequest {
    // @gotags: validate:"required"
    string access_token = 1; // 要被获取的Token
}
message ValidateTokenRequest {
    // @gotags: json:"accessToken" validate:"required"
    string access_token = 1; // 要被验证的Token
}


